# Using scaled soft core potentials for free energy calculations

# Define general settings

units real
dimension 3
boundary p p p
atom_style      full

# Define bond, angle, and dihedral style

bond_style    harmonic
angle_style    harmonic
dihedral_style    opls

# Define pair style and further settings

pair_style hybrid/overlay mie/cut 14
pair_modify mix arithmetic tail yes

# Define the neighbor list settings

neighbor 2.0 bin
neigh_modify every 1 delay 0 check yes 

# Define special bonds to scale 1-2, 1-3, or 1-4 vdW / Coulomb pair interactions

special_bonds lj 0 0 0  coul 0 0 0

# Define if new simulation (0) or read restart (1)

variable restart equal 0

if "${restart} == 1" then "read_restart equil.restart" else "read_data       lammps.data"

# Van der Waals interactions

pair_coeff  1 1  mie/cut 0.2709 3.6034 14.0 6.0 # CH3_alkane  CH3_alkane
pair_coeff  1 2  mie/cut 0.1687 3.8217 14.0 6.0 # CH3_alkane  CH2_alkane
pair_coeff  2 2  mie/cut 0.1051 4.04 14.0 6.0 # CH2_alkane  CH2_alkane



# ============= INITIAL SYSTEM SETUP AND EQUILIBRATION =============

# ------------- general ---------------

variable  timestep            equal       1

timestep  ${timestep}

# ------------- set ensemble settings ---------------

# seed value should be passed as variable in job file
variable  seed                index       12345                                      
variable  temperature         equal       450.0
variable  pressure            equal       12.928694793979767

# ------------- generate velocities ---------------

if "${restart} == 0" then "velocity        all create ${temperature} ${seed} rot yes dist gaussian"

# ------------- set integration settings ---------------


fix             int_npt all npt temp ${temperature} ${temperature} $(100.0*v_timestep)  iso ${pressure} ${pressure} $(1000.0*v_timestep)

# ------------- equilibrate system ---------------

thermo          10000
run             4000000
if "${restart} == 0" then "write_restart   equil.restart "
reset_timestep  0 

# ============= VARIABLES ===============

# ------------- general ---------------

variable  run_time            equal       2000000

# ------------- output ---------------

variable  sample_frequency    equal       20
variable  sample_number       equal       50
variable  to_file_every       equal       $(v_sample_frequency*v_sample_number)
variable  to_screen_every     equal       $(v_to_file_every*10)
      
# ------------- values ---------------

variable step equal step

# ============= SAMPLING CONDITIONS ============= 

thermo          ${to_screen_every}
thermo_style    custom step temp press pe ke etotal enthalpy vol density 

# Pressure, mass density, and potential energy sampling

variable press equal press
variable mass_dens equal density
variable pot_eng equal pe

fix sampling all ave/time ${sample_frequency} ${sample_number} ${to_file_every} v_press v_mass_dens v_pot_eng file values.sampling

# ============= RUN CONDITIONS =============

run             ${run_time}